
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftREFDIVrightUMINUSDTYPE EQUALS LPAREN RPAREN LCPAREN RCPAREN RETTYPE FUNCNAME SEMICOL COMMA AMP WORD REF NUMBER PLUS MINUS DIVexpression : RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN\n\tBODY : DECL SEMICOL BODY \n\t\t\t| ASSIGN SEMICOL BODY\n\t\t\t| \n\t\n\tDECL : DTYPE DECLIST\n\t\n\tDECLIST : ID COMMA DECLIST \n\t\t\t| ID\n\t\n\tID : WORD\n\t   | REF ID\n\t\n\taID : WORD\n\t\t| AMP aID\n\t\t| REF aID\n\t\n\tLHS_POINT : REF aID\n\t\n\tASSIGN : WORD EQUALS Wrhs\n\t\t| LHS_POINT EQUALS Wrhs\n\t\n\t\tWrhs : Wrhs PLUS Wrhs\n\t\t\t | Wrhs MINUS Wrhs\n\t\t\t | Wrhs REF Wrhs\n\t\t\t | Wrhs DIV Wrhs\n\t\n\t\tWrhs : aID\n\t\t\t | Natom\n\t\n\t\tWrhs : MINUS Wrhs %prec UMINUS\n\t\n\tNatom : NUMBER\n\t'
    
_lr_action_items = {'RETTYPE':([0,],[2,]),'$end':([1,14,],[0,-1,]),'FUNCNAME':([2,],[3,]),'LPAREN':([3,],[4,]),'RPAREN':([4,],[5,]),'LCPAREN':([5,],[6,]),'RCPAREN':([6,7,15,16,27,28,],[-4,14,-4,-4,-2,-3,]),'DTYPE':([6,15,16,],[10,10,10,]),'WORD':([6,10,13,15,16,20,21,22,23,26,29,32,40,41,42,43,],[11,19,25,11,11,19,25,25,25,25,19,25,25,25,25,25,]),'REF':([6,10,13,15,16,20,21,22,23,25,26,29,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,],[13,20,23,13,13,20,23,23,23,-10,23,20,42,23,-20,-21,-23,42,-12,-11,23,23,23,23,-22,42,42,-18,-19,]),'SEMICOL':([8,9,17,18,19,25,30,31,33,34,35,36,37,38,39,44,45,46,47,48,],[15,16,-5,-7,-8,-10,-9,-14,-20,-21,-23,-15,-12,-11,-6,-22,-16,-17,-18,-19,]),'EQUALS':([11,12,24,25,37,38,],[21,22,-13,-10,-12,-11,]),'AMP':([13,21,22,23,26,32,40,41,42,43,],[26,26,26,26,26,26,26,26,26,26,]),'COMMA':([18,19,30,],[29,-8,-9,]),'MINUS':([21,22,25,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,],[32,32,-10,41,32,-20,-21,-23,41,-12,-11,32,32,32,32,-22,-16,-17,-18,-19,]),'NUMBER':([21,22,32,40,41,42,43,],[35,35,35,35,35,35,35,]),'PLUS':([25,31,33,34,35,36,37,38,44,45,46,47,48,],[-10,40,-20,-21,-23,40,-12,-11,-22,-16,-17,-18,-19,]),'DIV':([25,31,33,34,35,36,37,38,44,45,46,47,48,],[-10,43,-20,-21,-23,43,-12,-11,-22,43,43,-18,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),'BODY':([6,15,16,],[7,27,28,]),'DECL':([6,15,16,],[8,8,8,]),'ASSIGN':([6,15,16,],[9,9,9,]),'LHS_POINT':([6,15,16,],[12,12,12,]),'DECLIST':([10,29,],[17,39,]),'ID':([10,20,29,],[18,30,18,]),'aID':([13,21,22,23,26,32,40,41,42,43,],[24,33,33,37,38,33,33,33,33,33,]),'Wrhs':([21,22,32,40,41,42,43,],[31,36,44,45,46,47,48,]),'Natom':([21,22,32,40,41,42,43,],[34,34,34,34,34,34,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN','expression',7,'p_expression_prog','parser.py',78),
  ('BODY -> DECL SEMICOL BODY','BODY',3,'p_expression_body','parser.py',81),
  ('BODY -> ASSIGN SEMICOL BODY','BODY',3,'p_expression_body','parser.py',82),
  ('BODY -> <empty>','BODY',0,'p_expression_body','parser.py',83),
  ('DECL -> DTYPE DECLIST','DECL',2,'p_expression_decl','parser.py',87),
  ('DECLIST -> ID COMMA DECLIST','DECLIST',3,'p_expression_declist','parser.py',100),
  ('DECLIST -> ID','DECLIST',1,'p_expression_declist','parser.py',101),
  ('ID -> WORD','ID',1,'p_expression_id','parser.py',107),
  ('ID -> REF ID','ID',2,'p_expression_id','parser.py',108),
  ('aID -> WORD','aID',1,'p_expression_assignId','parser.py',114),
  ('aID -> AMP aID','aID',2,'p_expression_assignId','parser.py',115),
  ('aID -> REF aID','aID',2,'p_expression_assignId','parser.py',116),
  ('LHS_POINT -> REF aID','LHS_POINT',2,'p_expression_lhspointer','parser.py',121),
  ('ASSIGN -> WORD EQUALS Wrhs','ASSIGN',3,'p_expression_assign','parser.py',125),
  ('ASSIGN -> LHS_POINT EQUALS Wrhs','ASSIGN',3,'p_expression_assign','parser.py',126),
  ('Wrhs -> Wrhs PLUS Wrhs','Wrhs',3,'p_expression_Wrhs1','parser.py',132),
  ('Wrhs -> Wrhs MINUS Wrhs','Wrhs',3,'p_expression_Wrhs1','parser.py',133),
  ('Wrhs -> Wrhs REF Wrhs','Wrhs',3,'p_expression_Wrhs1','parser.py',134),
  ('Wrhs -> Wrhs DIV Wrhs','Wrhs',3,'p_expression_Wrhs1','parser.py',135),
  ('Wrhs -> aID','Wrhs',1,'p_expression_Wrhs2','parser.py',139),
  ('Wrhs -> Natom','Wrhs',1,'p_expression_Wrhs2','parser.py',140),
  ('Wrhs -> MINUS Wrhs','Wrhs',2,'p_expression_Wrhs3','parser.py',144),
  ('Natom -> NUMBER','Natom',1,'p_expression_Natom','parser.py',149),
]
