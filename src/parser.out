Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN
Rule 2     BODY -> DECL SEMICOL BODY
Rule 3     BODY -> ASSIGN SEMICOL BODY
Rule 4     BODY -> <empty>
Rule 5     DECL -> DTYPE DECLIST
Rule 6     DECLIST -> ID COMMA DECLIST
Rule 7     DECLIST -> ID
Rule 8     ID -> WORD
Rule 9     ID -> REF ID
Rule 10    LHS -> WORD
Rule 11    LHS -> AMP LHS
Rule 12    LHS -> AMP LHS_POINT
Rule 13    LHS -> LPAREN LHS RPAREN
Rule 14    LHS_POINT -> REF LHS
Rule 15    LHS_POINT -> REF LHS_POINT
Rule 16    LHS_POINT -> LPAREN LHS_POINT RPAREN
Rule 17    ASSIGN -> PRIM COMMA ASSIGN
Rule 18    ASSIGN -> PRIM
Rule 19    PRIM -> LHS EQUALS LHS
Rule 20    PRIM -> LHS EQUALS LHS_POINT
Rule 21    PRIM -> LHS_POINT EQUALS LHS
Rule 22    PRIM -> LHS_POINT EQUALS LHS_POINT
Rule 23    PRIM -> LHS_POINT EQUALS NUMBER

Terminals, with rules where they appear

AMP                  : 11 12
COMMA                : 6 17
DTYPE                : 5
EQUALS               : 19 20 21 22 23
FUNCNAME             : 1
LCPAREN              : 1
LPAREN               : 1 13 16
NUMBER               : 23
RCPAREN              : 1
REF                  : 9 14 15
RETTYPE              : 1
RPAREN               : 1 13 16
SEMICOL              : 2 3
WORD                 : 8 10
error                : 

Nonterminals, with rules where they appear

ASSIGN               : 3 17
BODY                 : 1 2 3
DECL                 : 2
DECLIST              : 5 6
ID                   : 6 7 9
LHS                  : 11 13 14 19 19 20 21
LHS_POINT            : 12 15 16 20 21 22 22 23
PRIM                 : 17 18
expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN

    RETTYPE         shift and go to state 1

    expression                     shift and go to state 2

state 1

    (1) expression -> RETTYPE . FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN

    FUNCNAME        shift and go to state 3


state 2

    (0) S' -> expression .



state 3

    (1) expression -> RETTYPE FUNCNAME . LPAREN RPAREN LCPAREN BODY RCPAREN

    LPAREN          shift and go to state 4


state 4

    (1) expression -> RETTYPE FUNCNAME LPAREN . RPAREN LCPAREN BODY RCPAREN

    RPAREN          shift and go to state 5


state 5

    (1) expression -> RETTYPE FUNCNAME LPAREN RPAREN . LCPAREN BODY RCPAREN

    LCPAREN         shift and go to state 6


state 6

    (1) expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN . BODY RCPAREN
    (2) BODY -> . DECL SEMICOL BODY
    (3) BODY -> . ASSIGN SEMICOL BODY
    (4) BODY -> .
    (5) DECL -> . DTYPE DECLIST
    (17) ASSIGN -> . PRIM COMMA ASSIGN
    (18) ASSIGN -> . PRIM
    (19) PRIM -> . LHS EQUALS LHS
    (20) PRIM -> . LHS EQUALS LHS_POINT
    (21) PRIM -> . LHS_POINT EQUALS LHS
    (22) PRIM -> . LHS_POINT EQUALS LHS_POINT
    (23) PRIM -> . LHS_POINT EQUALS NUMBER
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    RCPAREN         reduce using rule 4 (BODY -> .)
    DTYPE           shift and go to state 11
    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    BODY                           shift and go to state 9
    LHS                            shift and go to state 7
    DECL                           shift and go to state 12
    PRIM                           shift and go to state 16
    ASSIGN                         shift and go to state 8
    LHS_POINT                      shift and go to state 17

state 7

    (19) PRIM -> LHS . EQUALS LHS
    (20) PRIM -> LHS . EQUALS LHS_POINT

    EQUALS          shift and go to state 18


state 8

    (3) BODY -> ASSIGN . SEMICOL BODY

    SEMICOL         shift and go to state 19


state 9

    (1) expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY . RCPAREN

    RCPAREN         shift and go to state 20


state 10

    (11) LHS -> AMP . LHS
    (12) LHS -> AMP . LHS_POINT
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    LHS                            shift and go to state 21
    LHS_POINT                      shift and go to state 22

state 11

    (5) DECL -> DTYPE . DECLIST
    (6) DECLIST -> . ID COMMA DECLIST
    (7) DECLIST -> . ID
    (8) ID -> . WORD
    (9) ID -> . REF ID

    WORD            shift and go to state 23
    REF             shift and go to state 24

    DECLIST                        shift and go to state 25
    ID                             shift and go to state 26

state 12

    (2) BODY -> DECL . SEMICOL BODY

    SEMICOL         shift and go to state 27


state 13

    (13) LHS -> LPAREN . LHS RPAREN
    (16) LHS_POINT -> LPAREN . LHS_POINT RPAREN
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    LHS                            shift and go to state 28
    LHS_POINT                      shift and go to state 29

state 14

    (10) LHS -> WORD .

    COMMA           reduce using rule 10 (LHS -> WORD .)
    SEMICOL         reduce using rule 10 (LHS -> WORD .)
    RPAREN          reduce using rule 10 (LHS -> WORD .)
    EQUALS          reduce using rule 10 (LHS -> WORD .)


state 15

    (14) LHS_POINT -> REF . LHS
    (15) LHS_POINT -> REF . LHS_POINT
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    LHS                            shift and go to state 30
    LHS_POINT                      shift and go to state 31

state 16

    (17) ASSIGN -> PRIM . COMMA ASSIGN
    (18) ASSIGN -> PRIM .

    COMMA           shift and go to state 32
    SEMICOL         reduce using rule 18 (ASSIGN -> PRIM .)


state 17

    (21) PRIM -> LHS_POINT . EQUALS LHS
    (22) PRIM -> LHS_POINT . EQUALS LHS_POINT
    (23) PRIM -> LHS_POINT . EQUALS NUMBER

    EQUALS          shift and go to state 33


state 18

    (19) PRIM -> LHS EQUALS . LHS
    (20) PRIM -> LHS EQUALS . LHS_POINT
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    LHS                            shift and go to state 34
    LHS_POINT                      shift and go to state 35

state 19

    (3) BODY -> ASSIGN SEMICOL . BODY
    (2) BODY -> . DECL SEMICOL BODY
    (3) BODY -> . ASSIGN SEMICOL BODY
    (4) BODY -> .
    (5) DECL -> . DTYPE DECLIST
    (17) ASSIGN -> . PRIM COMMA ASSIGN
    (18) ASSIGN -> . PRIM
    (19) PRIM -> . LHS EQUALS LHS
    (20) PRIM -> . LHS EQUALS LHS_POINT
    (21) PRIM -> . LHS_POINT EQUALS LHS
    (22) PRIM -> . LHS_POINT EQUALS LHS_POINT
    (23) PRIM -> . LHS_POINT EQUALS NUMBER
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    RCPAREN         reduce using rule 4 (BODY -> .)
    DTYPE           shift and go to state 11
    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    BODY                           shift and go to state 36
    LHS                            shift and go to state 7
    DECL                           shift and go to state 12
    PRIM                           shift and go to state 16
    ASSIGN                         shift and go to state 8
    LHS_POINT                      shift and go to state 17

state 20

    (1) expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN .

    $end            reduce using rule 1 (expression -> RETTYPE FUNCNAME LPAREN RPAREN LCPAREN BODY RCPAREN .)


state 21

    (11) LHS -> AMP LHS .

    COMMA           reduce using rule 11 (LHS -> AMP LHS .)
    SEMICOL         reduce using rule 11 (LHS -> AMP LHS .)
    RPAREN          reduce using rule 11 (LHS -> AMP LHS .)
    EQUALS          reduce using rule 11 (LHS -> AMP LHS .)


state 22

    (12) LHS -> AMP LHS_POINT .

    COMMA           reduce using rule 12 (LHS -> AMP LHS_POINT .)
    SEMICOL         reduce using rule 12 (LHS -> AMP LHS_POINT .)
    RPAREN          reduce using rule 12 (LHS -> AMP LHS_POINT .)
    EQUALS          reduce using rule 12 (LHS -> AMP LHS_POINT .)


state 23

    (8) ID -> WORD .

    COMMA           reduce using rule 8 (ID -> WORD .)
    SEMICOL         reduce using rule 8 (ID -> WORD .)


state 24

    (9) ID -> REF . ID
    (8) ID -> . WORD
    (9) ID -> . REF ID

    WORD            shift and go to state 23
    REF             shift and go to state 24

    ID                             shift and go to state 37

state 25

    (5) DECL -> DTYPE DECLIST .

    SEMICOL         reduce using rule 5 (DECL -> DTYPE DECLIST .)


state 26

    (6) DECLIST -> ID . COMMA DECLIST
    (7) DECLIST -> ID .

    COMMA           shift and go to state 38
    SEMICOL         reduce using rule 7 (DECLIST -> ID .)


state 27

    (2) BODY -> DECL SEMICOL . BODY
    (2) BODY -> . DECL SEMICOL BODY
    (3) BODY -> . ASSIGN SEMICOL BODY
    (4) BODY -> .
    (5) DECL -> . DTYPE DECLIST
    (17) ASSIGN -> . PRIM COMMA ASSIGN
    (18) ASSIGN -> . PRIM
    (19) PRIM -> . LHS EQUALS LHS
    (20) PRIM -> . LHS EQUALS LHS_POINT
    (21) PRIM -> . LHS_POINT EQUALS LHS
    (22) PRIM -> . LHS_POINT EQUALS LHS_POINT
    (23) PRIM -> . LHS_POINT EQUALS NUMBER
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    RCPAREN         reduce using rule 4 (BODY -> .)
    DTYPE           shift and go to state 11
    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    BODY                           shift and go to state 39
    LHS                            shift and go to state 7
    DECL                           shift and go to state 12
    PRIM                           shift and go to state 16
    ASSIGN                         shift and go to state 8
    LHS_POINT                      shift and go to state 17

state 28

    (13) LHS -> LPAREN LHS . RPAREN

    RPAREN          shift and go to state 40


state 29

    (16) LHS_POINT -> LPAREN LHS_POINT . RPAREN

    RPAREN          shift and go to state 41


state 30

    (14) LHS_POINT -> REF LHS .

    EQUALS          reduce using rule 14 (LHS_POINT -> REF LHS .)
    RPAREN          reduce using rule 14 (LHS_POINT -> REF LHS .)
    COMMA           reduce using rule 14 (LHS_POINT -> REF LHS .)
    SEMICOL         reduce using rule 14 (LHS_POINT -> REF LHS .)


state 31

    (15) LHS_POINT -> REF LHS_POINT .

    EQUALS          reduce using rule 15 (LHS_POINT -> REF LHS_POINT .)
    RPAREN          reduce using rule 15 (LHS_POINT -> REF LHS_POINT .)
    COMMA           reduce using rule 15 (LHS_POINT -> REF LHS_POINT .)
    SEMICOL         reduce using rule 15 (LHS_POINT -> REF LHS_POINT .)


state 32

    (17) ASSIGN -> PRIM COMMA . ASSIGN
    (17) ASSIGN -> . PRIM COMMA ASSIGN
    (18) ASSIGN -> . PRIM
    (19) PRIM -> . LHS EQUALS LHS
    (20) PRIM -> . LHS EQUALS LHS_POINT
    (21) PRIM -> . LHS_POINT EQUALS LHS
    (22) PRIM -> . LHS_POINT EQUALS LHS_POINT
    (23) PRIM -> . LHS_POINT EQUALS NUMBER
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    ASSIGN                         shift and go to state 42
    LHS                            shift and go to state 7
    PRIM                           shift and go to state 16
    LHS_POINT                      shift and go to state 17

state 33

    (21) PRIM -> LHS_POINT EQUALS . LHS
    (22) PRIM -> LHS_POINT EQUALS . LHS_POINT
    (23) PRIM -> LHS_POINT EQUALS . NUMBER
    (10) LHS -> . WORD
    (11) LHS -> . AMP LHS
    (12) LHS -> . AMP LHS_POINT
    (13) LHS -> . LPAREN LHS RPAREN
    (14) LHS_POINT -> . REF LHS
    (15) LHS_POINT -> . REF LHS_POINT
    (16) LHS_POINT -> . LPAREN LHS_POINT RPAREN

    NUMBER          shift and go to state 44
    WORD            shift and go to state 14
    AMP             shift and go to state 10
    LPAREN          shift and go to state 13
    REF             shift and go to state 15

    LHS                            shift and go to state 43
    LHS_POINT                      shift and go to state 45

state 34

    (19) PRIM -> LHS EQUALS LHS .

    COMMA           reduce using rule 19 (PRIM -> LHS EQUALS LHS .)
    SEMICOL         reduce using rule 19 (PRIM -> LHS EQUALS LHS .)


state 35

    (20) PRIM -> LHS EQUALS LHS_POINT .

    COMMA           reduce using rule 20 (PRIM -> LHS EQUALS LHS_POINT .)
    SEMICOL         reduce using rule 20 (PRIM -> LHS EQUALS LHS_POINT .)


state 36

    (3) BODY -> ASSIGN SEMICOL BODY .

    RCPAREN         reduce using rule 3 (BODY -> ASSIGN SEMICOL BODY .)


state 37

    (9) ID -> REF ID .

    COMMA           reduce using rule 9 (ID -> REF ID .)
    SEMICOL         reduce using rule 9 (ID -> REF ID .)


state 38

    (6) DECLIST -> ID COMMA . DECLIST
    (6) DECLIST -> . ID COMMA DECLIST
    (7) DECLIST -> . ID
    (8) ID -> . WORD
    (9) ID -> . REF ID

    WORD            shift and go to state 23
    REF             shift and go to state 24

    DECLIST                        shift and go to state 46
    ID                             shift and go to state 26

state 39

    (2) BODY -> DECL SEMICOL BODY .

    RCPAREN         reduce using rule 2 (BODY -> DECL SEMICOL BODY .)


state 40

    (13) LHS -> LPAREN LHS RPAREN .

    COMMA           reduce using rule 13 (LHS -> LPAREN LHS RPAREN .)
    SEMICOL         reduce using rule 13 (LHS -> LPAREN LHS RPAREN .)
    RPAREN          reduce using rule 13 (LHS -> LPAREN LHS RPAREN .)
    EQUALS          reduce using rule 13 (LHS -> LPAREN LHS RPAREN .)


state 41

    (16) LHS_POINT -> LPAREN LHS_POINT RPAREN .

    EQUALS          reduce using rule 16 (LHS_POINT -> LPAREN LHS_POINT RPAREN .)
    RPAREN          reduce using rule 16 (LHS_POINT -> LPAREN LHS_POINT RPAREN .)
    COMMA           reduce using rule 16 (LHS_POINT -> LPAREN LHS_POINT RPAREN .)
    SEMICOL         reduce using rule 16 (LHS_POINT -> LPAREN LHS_POINT RPAREN .)


state 42

    (17) ASSIGN -> PRIM COMMA ASSIGN .

    SEMICOL         reduce using rule 17 (ASSIGN -> PRIM COMMA ASSIGN .)


state 43

    (21) PRIM -> LHS_POINT EQUALS LHS .

    COMMA           reduce using rule 21 (PRIM -> LHS_POINT EQUALS LHS .)
    SEMICOL         reduce using rule 21 (PRIM -> LHS_POINT EQUALS LHS .)


state 44

    (23) PRIM -> LHS_POINT EQUALS NUMBER .

    COMMA           reduce using rule 23 (PRIM -> LHS_POINT EQUALS NUMBER .)
    SEMICOL         reduce using rule 23 (PRIM -> LHS_POINT EQUALS NUMBER .)


state 45

    (22) PRIM -> LHS_POINT EQUALS LHS_POINT .

    COMMA           reduce using rule 22 (PRIM -> LHS_POINT EQUALS LHS_POINT .)
    SEMICOL         reduce using rule 22 (PRIM -> LHS_POINT EQUALS LHS_POINT .)


state 46

    (6) DECLIST -> ID COMMA DECLIST .

    SEMICOL         reduce using rule 6 (DECLIST -> ID COMMA DECLIST .)

